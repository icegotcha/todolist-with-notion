import Head from 'next/head'
import { useMutation, useQuery } from 'react-query'
import { FileTextOutlined } from '@ant-design/icons'
import styles from '../styles/Home.module.css'
import { Button, Checkbox, Form, Input, Tag, Tooltip } from 'antd'

interface ITodo {
  name: string
  description: string
  is_high_priority: string
}

export default function Home() {
  const todoListQuery = useQuery(['todo-list'], async () => {
    const r = await fetch('/api/todo')
    return r.json()
  })
  const todoAddMutation = useMutation((data: ITodo) => fetch('/api/todo', {
    method: 'POST',
    headers: {
      'Accept': 'application/json',
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(data)
  }), {
    onSuccess: () => {
      todoListQuery.refetch()
    }
  })

  const onSubmitForm = async (value: ITodo) => {
    try {
      await todoAddMutation.mutateAsync(value)
    } catch(error) {
      console.error(error)
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Simple Todo App
        </h1>

        <div className={styles.description}>
          <h2>
            What will you do today?
          </h2>

          {todoListQuery.data && (
            <ul className={styles.todoList}>
              {todoListQuery.data.list.map((item: any, index: number) => (
                <li key={index}>
                  {item.properties['Name'].title[0].text.content}
                  <Tooltip title={item.properties['Description'].rich_text[0].text.content} color='magenta'><FileTextOutlined /></Tooltip>
                  {item.properties['High Priority'].checkbox && <Tag color='error'>High Priority</Tag>}
                </li>
              ))}
            </ul>
          )}

          <h2>
            Add new task
          </h2>

          <Form
            className={styles.todoForm}
            labelCol={{ span: 8 }}
            wrapperCol={{ span: 16 }}
            onFinish={onSubmitForm}
            autoComplete='off'
          >
            <Form.Item
              label='Name'
              name='name'

              rules={[{ required: true }]}
            >
              <Input />
            </Form.Item>
            <Form.Item
              label='Description'
              name='description'

              rules={[{ required: true }]}
            >
              <Input.TextArea />
            </Form.Item>
            <Form.Item name='is_high_priority' valuePropName="checked" wrapperCol={{ offset: 8, span: 16 }}>
              <Checkbox>High Priority</Checkbox>
            </Form.Item>
            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>
              <Button type="primary" htmlType="submit">
                Submit
              </Button>
            </Form.Item>
          </Form>
        </div>
      </main>
    </div>
  )
}
